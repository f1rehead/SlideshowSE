slideshow_jquery_image_gallery_backend_script = function () { var i = jQuery, e = {}; return e.isBackendInitialized = !1, e.init = function () { e.isBackendInitialized || (e.isBackendInitialized = !0, i(document).trigger("slideshowBackendReady")) }, i(document).ready(e.init), i(window).on('load', e.init), e }();
slideshow_jquery_image_gallery_backend_script.generalSettings = function () { var e = jQuery, i = {}; return i.isCurrentPage = !1, i.init = function () { "slideshow_page_general_settings" === window.pagenow && (i.isCurrentPage = !0, i.activateUserCapabilities()) }, i.activateUserCapabilities = function () { e("input").change(function (i) { var t, a, s, r = e(i.currentTarget), n = "slideshow-jquery-image-gallery-add-slideshows", d = "slideshow-jquery-image-gallery-edit-slideshows", l = "slideshow-jquery-image-gallery-delete-slideshows"; "checkbox" == r.attr("type").toLowerCase() && (t = r.attr("id").split("_"), a = t.shift(), s = t.join("_"), a !== d || r.attr("checked") ? (a === n || a === l) && e("#" + d + "_" + s).attr("checked", !0) : (e("#" + n + "_" + s).attr("checked", !1), e("#" + l + "_" + s).attr("checked", !1))) }) }, e(document).bind("slideshowBackendReady", i.init), i }();
slideshow_jquery_image_gallery_backend_script.generalSettings.customStyles = function () { var e = jQuery, t = {}; return t.init = function () { slideshow_jquery_image_gallery_backend_script.generalSettings.isCurrentPage && t.activateNavigation() }, t.activateNavigation = function () { e(".nav-tab").click(function (t) { var a, i = e(t.currentTarget), r = e(".nav-tab-active"); r.removeClass("nav-tab-active"), i.addClass("nav-tab-active"), e(r.attr("href").replace("#", ".")).hide(), e(i.attr("href").replace("#", ".")).show(), a = e("input[name=_wp_http_referer]"), a.attr("value", a.attr("value").split("#").shift() + i.attr("href")) }), e('a[href="#' + document.URL.split("#").pop() + '"]').trigger("click") }, e(document).bind("slideshowBackendReady", t.init), t }();
slideshow_jquery_image_gallery_backend_script.generalSettings.customStyles = function () { var t = jQuery, e = {}; return e.init = function () { slideshow_jquery_image_gallery_backend_script.generalSettings.isCurrentPage && (e.activateActionButtons(), e.activateDeleteButtons()) }, e.activateActionButtons = function () { t(".custom-styles-tab .styles-list .style-action.style-default").click(function (s) { var l, i, o, n, a, c = t(s.currentTarget), y = c.closest("li").find(".style-title").html(), u = c.closest("li").find(".style-content").html(), r = window.slideshow_jquery_image_gallery_backend_script_generalSettings, m = "slideshow-jquery-image-gallery-custom-styles"; "string" != typeof u || u.length <= 0 || ("object" == typeof r && ("object" == typeof r.localization && void 0 !== r.localization.newCustomizationPrefix && r.localization.newCustomizationPrefix.length > 0 && (y = r.localization.newCustomizationPrefix + " - " + y), "object" == typeof r.data && void 0 !== r.data.customStylesKey && r.data.customStylesKey.length > 0 && (m = r.data.customStylesKey)), l = m + "_" + (e.getHighestCustomStyleID() + 1), n = t(".custom-styles-tab .custom-style-templates"), i = n.find(".style-editor").clone(), i.addClass(l), i.find(".new-custom-style-title").attr("value", y), i.find(".new-custom-style-content").html(u), i.find(".new-custom-style-title").attr("name", m + "[" + l + "][title]"), i.find(".new-custom-style-content").attr("name", m + "[" + l + "][style]"), t(".custom-styles-tab .style-editors").append(i), setTimeout(function () { i.fadeIn(200) }, 200), o = n.find(".custom-styles-list-item").clone(!0), o.removeClass("custom-styles-list-item"), o.find(".style-title").html(y), o.find(".style-action").addClass(l), o.find(".style-delete").addClass(l), a = t(".custom-styles-tab .styles-list .custom-styles-list"), a.find(".no-custom-styles-found").remove(), a.append(o)) }), t(".custom-styles-tab .styles-list .style-action, .custom-styles-tab .custom-style-templates .custom-styles-list-item .style-action").click(function (e) { var s = t(e.currentTarget).attr("class").split(" ")[1]; void 0 !== s && (t(".custom-styles-tab .style-editors .style-editor").each(function (e, s) { t(s).fadeOut(200) }), setTimeout(function () { t(".style-editor." + s).fadeIn(200) }, 200)) }) }, e.activateDeleteButtons = function () { t(".custom-styles-tab .styles-list .style-delete, .custom-styles-tab .custom-style-templates .custom-styles-list-item .style-delete").click(function (e) { var s = t(e.currentTarget), l = s.attr("class").split(" ")[1], i = window.slideshow_jquery_image_gallery_backend_script_generalSettings, o = "Are you sure you want to delete this custom style?"; void 0 !== l && ("object" == typeof i && "object" == typeof i.localization && void 0 !== i.localization.confirmDeleteMessage && i.localization.confirmDeleteMessage.length > 0 && (o = i.localization.confirmDeleteMessage), confirm(o) && (t(".custom-styles-tab .style-editors .style-editor." + l).remove(), s.closest("li").remove())) }) }, e.getHighestCustomStyleID = function () { var e = 0; return t(".custom-styles-tab .style-editors .style-editor").each(function (s, l) { var i = parseInt(t(l).attr("class").split("_").pop(), 10); i > e && (e = i) }), parseInt(e, 10) }, t(document).bind("slideshowBackendReady", e.init), e }();
slideshow_jquery_image_gallery_backend_script.editSlideshow = function () { var i = jQuery, e = {}; return e.isCurrentPage = !1, e.init = function () { "slideshow" === window.pagenow && (e.isCurrentPage = !0, e.activateSettingsVisibilityDependency()) }, e.activateSettingsVisibilityDependency = function () { i(".depends-on-field-value").each(function (t, n) { var s = i(n), a = s.attr("class").split(" "), o = s.closest("tr"); i('input[name="' + a[1] + '"]:checked').val() == a[2] ? o.show() : o.hide(), i('input[name="' + a[1] + '"]').change(a, function (t) { var n = i("." + a[3]).closest("tr"); i(t.currentTarget).val() == a[2] ? e.animateElementVisibility(n, !0) : e.animateElementVisibility(n, !1) }) }) }, e.animateElementVisibility = function (e, t) { var n = i(e); void 0 === t && (n.stop(!0, !0), t = !n.is(":visible")), t ? (n.stop(!0, !0).show().css("background-color", "#c0dd52"), setTimeout(function () { n.stop(!0, !0).animate({ "background-color": "transparent" }, 1500) }, 500)) : (n.stop(!0, !0).css("background-color", "#d44f6e"), setTimeout(function () { n.stop(!0, !0).hide(1500, function () { n.css("background-color", "transparent") }) }, 500)) }, i(document).bind("slideshowBackendReady", e.init), e }();
slideshow_jquery_image_gallery_backend_script.editSlideshow.slideManager = function () {
    var $ = jQuery,
        self = {};

    self.uploader = null;

    /**
     *
     */
    self.init = function () {
        if (slideshow_jquery_image_gallery_backend_script.editSlideshow.isCurrentPage) {
            self.activate();
        }
    };

    /**
     * Activate edit slideshow functionality.
     */
    self.activate = function () {
        // Index first
        self.indexSlidesOrder();

        // Make list items in the sortables list sortable, exclude elements by using the cancel option
        $('.sortable-slides-list').sortable({
            revert: true,
            placeholder: 'sortable-placeholder',
            forcePlaceholderSize: true,
            handle: ".hndle",
            stop: function () {
                self.indexSlidesOrder();
            },
            cancel: 'input, select, textarea'
        });

        // Add the wp-color-picker plugin to the color fields
        $('.wp-color-picker-field').wpColorPicker({ width: 234 });

        // Open all slides on click
        $('.open-slides-button').on('click', function (event) {
            event.preventDefault();

            $('.sortable-slides-list .sortable-slides-list-item').each(function (listItemIndex, listItem) {
                var $listItem = $(listItem);

                if (!$listItem.find('.inside').is(':visible')) {
                    $listItem.find('.handlediv').trigger('click');
                }
            });
        });

        // Close all slides on click
        $('.close-slides-button').on('click', function (event) {
            event.preventDefault();

            $('.sortable-slides-list .sortable-slides-list-item').each(function (listItemIndex, listItem) {
                var $listItem = $(listItem);

                if ($listItem.find('.inside').is(':visible')) {
                    $listItem.find('.handlediv').trigger('click');
                }
            });
        });

        // Bind insert buttons
        $('.slideshow-insert-text-slide').on('click', self.insertTextSlide);
        $('.slideshow-insert-video-slide').on('click', self.insertVideoSlide);
        $('.slideshow-insert-embed-slide').on('click', self.insertEmbedSlide);
        $('.slideshow-insert-image-slide').on('click', self.mediaUploader);

        // Call self.deleteSlide on click
        $('.slideshow-delete-slide').on('click', function (event) {
            self.deleteSlide($(event.currentTarget).closest('.sortable-slides-list-item'));
        });
    };

    /**
     * Deletes slide from DOM
     *
     * @param $slide
     */
    self.deleteSlide = function ($slide) {
        var confirmMessage = 'Are you sure you want to delete this slide?',
            extraData = window.slideshow_jquery_image_gallery_backend_script_editSlideshow;

        if (typeof extraData === 'object' &&
            typeof extraData.localization === 'object' &&
            extraData.localization.confirm !== undefined &&
            extraData.localization.confirm.length > 0) {
            confirmMessage = extraData.localization.confirm;
        }

        if (!confirm(confirmMessage)) {
            return;
        }

        // Remove slide from DOM
        $slide.remove();
    };

    /**
     * Loop through sortable slides list items, setting slide orders
     */
    self.indexSlidesOrder = function () {
        // Loop through sortables
        $('.sortable-slides-list .sortable-slides-list-item').each(function (slideID, slide) {
            // Loop through all fields to set their name attributes with the new index
            $.each($(slide).find('input, select, textarea'), function (key, input) {
                var $input = $(input),
                    name = $input.attr('name');

                if (name === undefined ||
                    name.length <= 0) {
                    return;
                }

                name = name.replace(/[\[\]']+/g, ' ').split(' ');

                // Put name with new order ID back on the page
                $input.attr('name', name[0] + '[' + (slideID + 1) + '][' + name[2] + ']');
            });
        });
    };

    /**
     * Opens the WordPress 3.5 media uploader.
     */
    self.mediaUploader = function (event) {
        event.preventDefault();

        var uploaderTitle,
            externalData;

        // Reopen file frame if it has already been created
        if (self.uploader) {
            self.uploader.open();

            return;
        }

        externalData = window.slideshow_jquery_image_gallery_backend_script_editSlideshow;

        uploaderTitle = '';

        if (typeof externalData === 'object' &&
            typeof externalData.localization === 'object' &&
            externalData.localization.uploaderTitle !== undefined &&
            externalData.localization.uploaderTitle.length > 0) {
            uploaderTitle = externalData.localization.uploaderTitle;
        }

        // Create the uploader
        self.uploader = wp.media.frames.slideshow_jquery_image_galler_uploader = wp.media({
            frame: 'select',
            title: uploaderTitle,
            multiple: true,
            library:
            {
                type: 'image'
            }
        });

        // Create image slide on select
        self.uploader.on('select', function () {
            var attachments = self.uploader.state().get('selection').toJSON(),
                attachment,
                attachmentID;

            for (attachmentID in attachments) {
                if (!attachments.hasOwnProperty(attachmentID)) {
                    continue;
                }

                attachment = attachments[attachmentID];

                self.insertImageSlide(attachment.id, attachment.title, attachment.description, attachment.url, attachment.alt);
            }
        });

        self.uploader.open();
    };

    /**
     * Inserts image slide into the slides list
     *
     * @param id
     * @param title
     * @param description
     * @param src
     * @param alternativeText
     */
    self.insertImageSlide = function (id, title, description, src, alternativeText) {
        // Find and clone the image slide template
        var $imageSlide = $('.image-slide-template').find('.sortable-slides-list-item').clone(true, true);

        // Fill slide with data
        $imageSlide.find('.attachment').attr('src', src);
        $imageSlide.find('.attachment').attr('title', title);
        $imageSlide.find('.attachment').attr('alt', alternativeText);
        $imageSlide.find('.title').attr('value', title);
        $imageSlide.find('.description').html(description);
        $imageSlide.find('.alternativeText').attr('value', alternativeText);
        $imageSlide.find('.postId').attr('value', id);

        // Set names to be saved to the database
        $imageSlide.find('.title').attr('name', 'slides[0][title]');
        $imageSlide.find('.titleElementTagID').attr('name', 'slides[0][titleElementTagID]');
        $imageSlide.find('.description').attr('name', 'slides[0][description]');
        $imageSlide.find('.descriptionElementTagID').attr('name', 'slides[0][descriptionElementTagID]');
        $imageSlide.find('.url').attr('name', 'slides[0][url]');
        $imageSlide.find('.urlTarget').attr('name', 'slides[0][urlTarget]');
        $imageSlide.find('.alternativeText').attr('name', 'slides[0][alternativeText]');
        $imageSlide.find('.noFollow').attr('name', 'slides[0][noFollow]');
        $imageSlide.find('.type').attr('name', 'slides[0][type]');
        $imageSlide.find('.postId').attr('name', 'slides[0][postId]');

        // Put slide in the sortables list.
        $('.sortable-slides-list').prepend($imageSlide);

        // Reindex
        self.indexSlidesOrder();
    };

    /**
     * Inserts text slide into the slides list
     */
    self.insertTextSlide = function () {
        // Find and clone the text slide template
        var $textSlide = $('.text-slide-template').find('.sortable-slides-list-item').clone(true, true);

        // Set names to be saved to the database
        $textSlide.find('.title').attr('name', 'slides[0][title]');
        $textSlide.find('.titleElementTagID').attr('name', 'slides[0][titleElementTagID]');
        $textSlide.find('.description').attr('name', 'slides[0][description]');
        $textSlide.find('.descriptionElementTagID').attr('name', 'slides[0][descriptionElementTagID]');
        $textSlide.find('.textColor').attr('name', 'slides[0][textColor]');
        $textSlide.find('.color').attr('name', 'slides[0][color]');
        $textSlide.find('.url').attr('name', 'slides[0][url]');
        $textSlide.find('.urlTarget').attr('name', 'slides[0][urlTarget]');
        $textSlide.find('.noFollow').attr('name', 'slides[0][noFollow]');
        $textSlide.find('.type').attr('name', 'slides[0][type]');

        // Add color picker
        $textSlide.find('.color, .textColor').wpColorPicker();

        // Put slide in the sortables list.
        $('.sortable-slides-list').prepend($textSlide);

        // Reindex slide orders
        self.indexSlidesOrder();
    };

    /**
     * Inserts video slide into the slides list
     */
    self.insertVideoSlide = function () {
        // Find and clone the video slide template
        var $videoSlide = $('.video-slide-template').find('.sortable-slides-list-item').clone(true, true);

        // Set names to be saved to the database
        $videoSlide.find('.videoId').attr('name', 'slides[0][videoId]');
        $videoSlide.find('.showRelatedVideos').attr('name', 'slides[0][showRelatedVideos]');
        $videoSlide.find('.type').attr('name', 'slides[0][type]');

        // Put slide in the sortables list.
        $('.sortable-slides-list').prepend($videoSlide);

        // Reindex slide orders
        self.indexSlidesOrder();
    };

    /**
     * Inserts embedded media slide into the slides list
     */
    self.insertEmbedSlide = function () {
        // Find and clone the embed slide template
        var $embedSlide = $('.embed-slide-template').find('.sortable-slides-list-item').clone(true, true);

        // Set names to be saved to the database
        $embedSlide.find('.videoId').attr('name', 'slides[0][videoId]');
        $embedSlide.find('.showRelatedVideos').attr('name', 'slides[0][showRelatedVideos]');
        $embedSlide.find('.type').attr('name', 'slides[0][type]');

        // Put slide in the sortables list.
        $('.sortable-slides-list').prepend($embedSlide);

        // Reindex slide orders
        self.indexSlidesOrder();
    };


    $(document).bind('slideshowBackendReady', self.init);

    return self;
}();
slideshow_jquery_image_gallery_backend_script.shortcode = function () { var e = jQuery, o = {}; return o.init = function () { o.activateShortcodeInserter() }, o.activateShortcodeInserter = function () { e(".insertSlideshowShortcodeSlideshowInsertButton").click(function () { var o = "No slideshow selected.", t = "slideshow_deploy", i = parseInt(e("#insertSlideshowShortcodeSlideshowSelect").val(), 10), d = window.slideshow_jquery_image_gallery_backend_script_shortcode; return "object" == typeof d && ("object" == typeof d.data && void 0 !== d.data.shortcode && d.data.shortcode.length > 0 && (t = d.data.shortcode), "object" == typeof d.localization && void 0 !== d.localization.undefinedSlideshow && d.localization.undefinedSlideshow.length > 0 && (o = d.localization.undefinedSlideshow)), isNaN(i) ? (alert(o), !1) : (send_to_editor("[" + t + " id='" + i + "']"), tb_remove(), !0) }), e(".insertSlideshowShortcodeCancelButton").click(function () { return tb_remove(), !1 }) }, e(document).bind("slideshowBackendReady", o.init), o }();